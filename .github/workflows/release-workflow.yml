# Repo settings Actions permissions: Allow all actions and reusable workflows
name: Release Workflow

on:
  workflow_dispatch:
    inputs:
      commit_hash:
        description: 'Commit hash for the release branch (optional)'
        required: false
      repo_name:
        description: 'Repository name'
        required: true
        default: 'auth-service'

permissions:
  contents: write

jobs:
  release:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Git
      run: |
        git config user.email "${{ github.actor }}@users.noreply.github.com"
        git config user.name "${{ github.actor }}"
        git config credential.helper 'store --file=.git-credentials'
        echo "https://${{ secrets.GITHUB_TOKEN }}@github.com" > .git-credentials
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Fetch 'develop' branch
      run: git fetch origin develop:develop

    - name: Delete existing 'release' branch on remote
      run: git push --delete origin release || echo "Branch does not exist on remote"

    - name: Phase 1 - Create Release Branch
      id: phase1
      run: |
        commit_hash=${{ inputs.commit_hash }}
        git checkout develop
        git pull origin develop
        git checkout -b release

        if [ -n "$commit_hash" ]; then
          git reset --hard $commit_hash
        fi

        git push -u origin release --force

    - name: Phase 2 - Change Log
      run: |
        # Clone clog repository
        git clone https://${{ github.actor }}:${{ secrets.GITHUB_TOKEN }}@github.com/apptegy/clog.git || git clone https://${{ secrets.GITHUB_TOKEN }}@github.com/apptegy/clog.git || git clone https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/apptegy/clog.git


        # Build the Docker image
        docker build clog -t 124252578199.dkr.ecr.us-east-2.amazonaws.com/clog:latest

        # Alias clog command
        alias clog='docker run --rm -it 124252578199.dkr.ecr.us-east-2.amazonaws.com/clog:latest'

        # Example usage of clog without the removed line
        clog -a ${{ secrets.GITHUB_TOKEN }} -r apptegy/${{ inputs.repo_name }} -f release -t master > changelog.txt

    - name: Phase 3 - Release Pull Request
      run: |
        # Create a pull request using GitHub CLI
        pr_title=$(head -n 1 changelog.txt)
        pr_body=$(cat changelog.txt)
        gh pr create --base main --head release --title "$pr_title" --body "$pr_body"
